name: test_backend

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
      - name: Run tests
        run: |
          cd backend
          go test -v ./...

  build_backend:
    runs-on: ubuntu-latest
    needs: test_backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: backend/Dockerfile
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/se-66-backend:latest
    
  build_frontend:
    runs-on: ubuntu-latest
    needs: test_backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: frontend/Dockerfile
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/se-66-web:latest

  deploy_to_droplet:
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
    name: deploy to droplet
    steps:
      - name: Connect with SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/application/
            docker-compose pull
            docker-compose up -d
            docker image prune -f